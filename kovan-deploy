#!/usr/bin/env bash
set -ex

# Remove ./out folder
rm -rf ./out

export ETH_GAS=${ETH_GAS:-"7000000"}

test "$(seth chain)" = "kovan" || exit 1

# Get config variables
export CONFIG_STEP=kovan
CONFIG_FILE="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )/${CONFIG_STEP}.json"

tokens=$(jq -r ".tokens | keys_unsorted[]" "$CONFIG_FILE")
for token in $tokens; do
    eval export "\PIP_${token}=$(jq -r ".tokens.${token} | .pip" "$CONFIG_FILE")"
done

# Build OSM and Median contracts to get the necessary .abi files for base-deploy script
cd contracts/osm
dapp build
cd ../median
dapp build

cd ../../

# shellcheck source=/dev/null
./base-deploy

# shellcheck source=/dev/null
./poll-deploy

# shellcheck source=/dev/null
. load-addresses

for token in $tokens; do
    ilks=$(jq -r ".tokens.${token}.ilks | keys_unsorted[]" "$CONFIG_FILE")
    for ilk in $ilks; do
        # Set Collateral mat
        mat=$(jq -r ".tokens.${token}.ilks.${ilk} | .mat" "$CONFIG_FILE")
        mat=$(echo "$mat * 10 ^ 7" | bc -l)
        seth send "$MCD_MOM" 'execute(address,bytes memory)' "$MCD_MOM_LIB" "$(seth calldata 'file(address,bytes32,bytes32,uint256)' "$MCD_SPOT" "$(seth --to-bytes32 "$(seth --from-ascii "${token}-${ilk}")")" "$(seth --to-bytes32 "$(seth --from-ascii "mat")")" "$(seth --to-uint256 "$(seth --to-wei "$mat" ETH)")")"

        seth send "$MCD_SPOT" 'poke(bytes32)' "$(seth --to-bytes32 "$(seth --from-ascii "${token}-${ilk}")")"
    done
done

echo "KOVAN DEPLOYMENT COMPLETED SUCCESSFULLY"
